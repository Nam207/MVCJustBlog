@using FA.JustBlog.ViewModels.Categories
@using FA.JustBlog.Web.Areas.Admin.Controllers
@model UpdateCategoryViewModel
@{
    ViewBag.Title = "Update";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    var category = TempData["Category"] as UpdateCategoryViewModel;
}

<h2>Update</h2>

@*@Html.ValidationSummary()*@
<form action="/Admin/Category/Update" method="post">
    @Html.TextBoxFor(x => x.Id, new { @type = "hidden", @Value = category.Id })
    <div class="mb-3">
        @Html.LabelFor(x => x.Name, new { @class = "form-label" })
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control", onchange = "changeUrl('Name','UrlSlug')", @Value = category.Name })
        @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-danger" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(x => x.UrlSlug, new { @class = "form-label" })
        @Html.TextBoxFor(x => x.UrlSlug, new { @class = "form-control", @readonly = true, @Value = category.UrlSlug })
        @Html.ValidationMessageFor(x => x.UrlSlug, null, new { @class = "text-danger" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(x => x.Description, new { @class = "form-label" })
        <textarea class="form-control" rows="2" name="Description">@category.Description</textarea>
        @Html.ValidationMessageFor(x => x.Description, null, new { @class = "text-danger" })
    </div>
    <div class="mb-3">
        @Html.LabelFor(x => x.Status, new { @class = "form-label" })
        <small>If you update Status auto become InActive</small>
        @Html.TextBoxFor(x => x.Status, new { @class = "form-control", @Value = category.Status, @readonly = true })
    </div>
    <div class="mb-3">
        <button type="submit" class="btn btn-warning">Update</button>
    </div>
</form>